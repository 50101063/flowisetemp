import React, { useState, useEffect } from \'react\';\nimport { Link } from \'react-router-dom\';\n\nconst RecipeListPage = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\'\');\n  const [filterCategory, setFilterCategory] = useState(\'All\');\n\n  // Dummy data for demonstration. Replace with actual API call.\n  useEffect(() => {\n    const dummyRecipes = [\n      { id: 1, name: \'Spaghetti Bolognese\', category: \'Dinner\' },\n      { id: 2, name: \'Chocolate Chip Cookies\', category: \'Dessert\' },\n      { id: 3, name: \'Tomato Soup\', category: \'Soup\' },\n      { id: 4, name: \'Breakfast Burrito\', category: \'Breakfast\' },\n      { id: 5, name: \'Chicken Curry\', category: \'Dinner\' },\n    ];\n    setRecipes(dummyRecipes);\n  }, []);\n\n  const handleDelete = (id) => {\n    if (window.confirm(\'Are you sure you want to delete this recipe?\')) {\n      // Implement actual delete API call here\n      console.log(\`Deleting recipe with ID: \${id}\`);\n      setRecipes(recipes.filter(recipe => recipe.id !== id));\n      alert(\'Recipe deleted (frontend only). Implement backend deletion.\');\n    }\n  };\n\n  const filteredRecipes = recipes.filter(recipe => {\n    const matchesSearch = recipe.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                          // Placeholder for ingredient search, assuming ingredients will be a string in future\n                          false; // Will be updated when ingredient field is available\n    const matchesCategory = filterCategory === \'All\' || recipe.category === filterCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  const categories = [\'All\', ...new Set(recipes.map(recipe => recipe.category))];\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">Your Recipes</h1>\n\n      <div className=\"flex flex-col md:flex-row justify-between items-center mb-6 space-y-4 md:space-y-0 md:space-x-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by name or ingredient...\"\n          className=\"shadow appearance-none border rounded w-full md:w-1/2 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <select\n          className=\"shadow border rounded w-full md:w-1/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          value={filterCategory}\n          onChange={(e) => setFilterCategory(e.target.value)}\n        >\n          {categories.map(category => (\n            <option key={category} value={category}>{category}</option>\n          ))}\n        </select>\n        <Link\n          to=\"/recipes/new\"\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full md:w-auto text-center\"\n        >\n          Add New Recipe\n        </Link>\n      </div>\n\n      {filteredRecipes.length === 0 ? (\n        <p className=\"text-center text-gray-600\">No recipes found. Try adjusting your search/filters or add a new recipe!</p>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredRecipes.map(recipe => (\n            <div key={recipe.id} className=\"bg-white rounded-lg shadow-md p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">{recipe.name}</h2>\n              <p className=\"text-gray-600 text-sm mb-4\">Category: {recipe.category}</p>\n              <div className=\"flex justify-end space-x-2\">\n                <Link\n                  to={\`/recipes/\${recipe.id}\`}\n                  className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 text-sm font-bold py-1 px-3 rounded\"\n                >\n                  View\n                </Link>\n                <Link\n                  to={\`/recipes/edit/\${recipe.id}\`}\n                  className=\"bg-yellow-500 hover:bg-yellow-600 text-white text-sm font-bold py-1 px-3 rounded\"\n                >\n                  Edit\n                </Link>\n                <button\n                  onClick={() => handleDelete(recipe.id)}\n                  className=\"bg-red-500 hover:bg-red-600 text-white text-sm font-bold py-1 px-3 rounded\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeListPage;\n