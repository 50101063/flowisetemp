version: '3.8'

services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-products_db}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432" # Expose for local access if needed
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-products_db}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"

  frontend:
    build:
      context: ./integration/frontend_nginx
    ports:
      - "8080:80" # Map container port 80 to host port 8080
    depends_on:
      - backend # Ensure backend is up before frontend starts (though frontend doesn't strictly depend on backend at start, it's good practice for an integrated system)

volumes:
  postgres_data:
